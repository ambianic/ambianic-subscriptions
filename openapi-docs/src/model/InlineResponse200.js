/**
 * ambianic-cloud-api-collection
 * This collection contains a specification for all API endpoints within Ambianic's Cloud API.
 *
 * The version of the OpenAPI document: 1x
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse200 model module.
 * @module model/InlineResponse200
 * @version 1x
 */
class InlineResponse200 {
    /**
     * Constructs a new <code>InlineResponse200</code>.
     * @alias module:model/InlineResponse200
     * @param id {String} 
     * @param _object {String} 
     * @param billingCycleAnchor {Number} 
     * @param cancelAtPeriodEnd {Boolean} 
     * @param canceledAt {Number} 
     * @param collectionMethod {String} 
     * @param created {Number} 
     * @param currentPeriodEnd {Number} 
     * @param currentPeriodStart {Number} 
     * @param customer {String} 
     * @param endedAt {Number} 
     * @param livemode {Boolean} 
     * @param metadata {Object} 
     * @param startDate {Number} 
     * @param status {String} 
     * @param trialEnd {Number} 
     * @param trialStart {Number} 
     */
    constructor(id, _object, billingCycleAnchor, cancelAtPeriodEnd, canceledAt, collectionMethod, created, currentPeriodEnd, currentPeriodStart, customer, endedAt, livemode, metadata, startDate, status, trialEnd, trialStart) { 
        
        InlineResponse200.initialize(this, id, _object, billingCycleAnchor, cancelAtPeriodEnd, canceledAt, collectionMethod, created, currentPeriodEnd, currentPeriodStart, customer, endedAt, livemode, metadata, startDate, status, trialEnd, trialStart);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, _object, billingCycleAnchor, cancelAtPeriodEnd, canceledAt, collectionMethod, created, currentPeriodEnd, currentPeriodStart, customer, endedAt, livemode, metadata, startDate, status, trialEnd, trialStart) { 
        obj['id'] = id;
        obj['object'] = _object;
        obj['billing_cycle_anchor'] = billingCycleAnchor;
        obj['cancel_at_period_end'] = cancelAtPeriodEnd;
        obj['canceled_at'] = canceledAt;
        obj['collection_method'] = collectionMethod;
        obj['created'] = created;
        obj['current_period_end'] = currentPeriodEnd;
        obj['current_period_start'] = currentPeriodStart;
        obj['customer'] = customer;
        obj['ended_at'] = endedAt;
        obj['livemode'] = livemode;
        obj['metadata'] = metadata;
        obj['start_date'] = startDate;
        obj['status'] = status;
        obj['trial_end'] = trialEnd;
        obj['trial_start'] = trialStart;
    }

    /**
     * Constructs a <code>InlineResponse200</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse200} obj Optional instance to populate.
     * @return {module:model/InlineResponse200} The populated <code>InlineResponse200</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse200();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('application_fee_percent')) {
                obj['application_fee_percent'] = ApiClient.convertToType(data['application_fee_percent'], Object);
            }
            if (data.hasOwnProperty('billing_cycle_anchor')) {
                obj['billing_cycle_anchor'] = ApiClient.convertToType(data['billing_cycle_anchor'], 'Number');
            }
            if (data.hasOwnProperty('billing_thresholds')) {
                obj['billing_thresholds'] = ApiClient.convertToType(data['billing_thresholds'], Object);
            }
            if (data.hasOwnProperty('cancel_at')) {
                obj['cancel_at'] = ApiClient.convertToType(data['cancel_at'], Object);
            }
            if (data.hasOwnProperty('cancel_at_period_end')) {
                obj['cancel_at_period_end'] = ApiClient.convertToType(data['cancel_at_period_end'], 'Boolean');
            }
            if (data.hasOwnProperty('canceled_at')) {
                obj['canceled_at'] = ApiClient.convertToType(data['canceled_at'], 'Number');
            }
            if (data.hasOwnProperty('collection_method')) {
                obj['collection_method'] = ApiClient.convertToType(data['collection_method'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Number');
            }
            if (data.hasOwnProperty('current_period_end')) {
                obj['current_period_end'] = ApiClient.convertToType(data['current_period_end'], 'Number');
            }
            if (data.hasOwnProperty('current_period_start')) {
                obj['current_period_start'] = ApiClient.convertToType(data['current_period_start'], 'Number');
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = ApiClient.convertToType(data['customer'], 'String');
            }
            if (data.hasOwnProperty('days_until_due')) {
                obj['days_until_due'] = ApiClient.convertToType(data['days_until_due'], Object);
            }
            if (data.hasOwnProperty('default_payment_method')) {
                obj['default_payment_method'] = ApiClient.convertToType(data['default_payment_method'], Object);
            }
            if (data.hasOwnProperty('default_source')) {
                obj['default_source'] = ApiClient.convertToType(data['default_source'], Object);
            }
            if (data.hasOwnProperty('discount')) {
                obj['discount'] = ApiClient.convertToType(data['discount'], Object);
            }
            if (data.hasOwnProperty('ended_at')) {
                obj['ended_at'] = ApiClient.convertToType(data['ended_at'], 'Number');
            }
            if (data.hasOwnProperty('latest_invoice')) {
                obj['latest_invoice'] = ApiClient.convertToType(data['latest_invoice'], Object);
            }
            if (data.hasOwnProperty('livemode')) {
                obj['livemode'] = ApiClient.convertToType(data['livemode'], 'Boolean');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('next_pending_invoice_item_invoice')) {
                obj['next_pending_invoice_item_invoice'] = ApiClient.convertToType(data['next_pending_invoice_item_invoice'], Object);
            }
            if (data.hasOwnProperty('pause_collection')) {
                obj['pause_collection'] = ApiClient.convertToType(data['pause_collection'], Object);
            }
            if (data.hasOwnProperty('pending_invoice_item_interval')) {
                obj['pending_invoice_item_interval'] = ApiClient.convertToType(data['pending_invoice_item_interval'], Object);
            }
            if (data.hasOwnProperty('pending_setup_intent')) {
                obj['pending_setup_intent'] = ApiClient.convertToType(data['pending_setup_intent'], Object);
            }
            if (data.hasOwnProperty('pending_update')) {
                obj['pending_update'] = ApiClient.convertToType(data['pending_update'], Object);
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = ApiClient.convertToType(data['schedule'], Object);
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('transfer_data')) {
                obj['transfer_data'] = ApiClient.convertToType(data['transfer_data'], Object);
            }
            if (data.hasOwnProperty('trial_end')) {
                obj['trial_end'] = ApiClient.convertToType(data['trial_end'], 'Number');
            }
            if (data.hasOwnProperty('trial_start')) {
                obj['trial_start'] = ApiClient.convertToType(data['trial_start'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
InlineResponse200.prototype['id'] = undefined;

/**
 * @member {String} object
 */
InlineResponse200.prototype['object'] = undefined;

/**
 * @member {Object} application_fee_percent
 */
InlineResponse200.prototype['application_fee_percent'] = undefined;

/**
 * @member {Number} billing_cycle_anchor
 */
InlineResponse200.prototype['billing_cycle_anchor'] = undefined;

/**
 * @member {Object} billing_thresholds
 */
InlineResponse200.prototype['billing_thresholds'] = undefined;

/**
 * @member {Object} cancel_at
 */
InlineResponse200.prototype['cancel_at'] = undefined;

/**
 * @member {Boolean} cancel_at_period_end
 */
InlineResponse200.prototype['cancel_at_period_end'] = undefined;

/**
 * @member {Number} canceled_at
 */
InlineResponse200.prototype['canceled_at'] = undefined;

/**
 * @member {String} collection_method
 */
InlineResponse200.prototype['collection_method'] = undefined;

/**
 * @member {Number} created
 */
InlineResponse200.prototype['created'] = undefined;

/**
 * @member {Number} current_period_end
 */
InlineResponse200.prototype['current_period_end'] = undefined;

/**
 * @member {Number} current_period_start
 */
InlineResponse200.prototype['current_period_start'] = undefined;

/**
 * @member {String} customer
 */
InlineResponse200.prototype['customer'] = undefined;

/**
 * @member {Object} days_until_due
 */
InlineResponse200.prototype['days_until_due'] = undefined;

/**
 * @member {Object} default_payment_method
 */
InlineResponse200.prototype['default_payment_method'] = undefined;

/**
 * @member {Object} default_source
 */
InlineResponse200.prototype['default_source'] = undefined;

/**
 * @member {Object} discount
 */
InlineResponse200.prototype['discount'] = undefined;

/**
 * @member {Number} ended_at
 */
InlineResponse200.prototype['ended_at'] = undefined;

/**
 * @member {Object} latest_invoice
 */
InlineResponse200.prototype['latest_invoice'] = undefined;

/**
 * @member {Boolean} livemode
 */
InlineResponse200.prototype['livemode'] = undefined;

/**
 * @member {Object} metadata
 */
InlineResponse200.prototype['metadata'] = undefined;

/**
 * @member {Object} next_pending_invoice_item_invoice
 */
InlineResponse200.prototype['next_pending_invoice_item_invoice'] = undefined;

/**
 * @member {Object} pause_collection
 */
InlineResponse200.prototype['pause_collection'] = undefined;

/**
 * @member {Object} pending_invoice_item_interval
 */
InlineResponse200.prototype['pending_invoice_item_interval'] = undefined;

/**
 * @member {Object} pending_setup_intent
 */
InlineResponse200.prototype['pending_setup_intent'] = undefined;

/**
 * @member {Object} pending_update
 */
InlineResponse200.prototype['pending_update'] = undefined;

/**
 * @member {Object} schedule
 */
InlineResponse200.prototype['schedule'] = undefined;

/**
 * @member {Number} start_date
 */
InlineResponse200.prototype['start_date'] = undefined;

/**
 * @member {String} status
 */
InlineResponse200.prototype['status'] = undefined;

/**
 * @member {Object} transfer_data
 */
InlineResponse200.prototype['transfer_data'] = undefined;

/**
 * @member {Number} trial_end
 */
InlineResponse200.prototype['trial_end'] = undefined;

/**
 * @member {Number} trial_start
 */
InlineResponse200.prototype['trial_start'] = undefined;






export default InlineResponse200;

