name: Ambianic Functions API CI Test

on:
  # Trigger the workflow on push or pull request against main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install Node JS ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/checkout@v1
      - name: Install application dependencies
        run: npm install

      - name: Generate OpenAPI specs+ 
        run: npm run generate-swagger && ./scripts.sh cleanup

      - name: Local function testing
        run:  npm run mock-server & sleep 10 && npm run test:postman
        env:
          FUNCTION_URL: http://127.0.0.1:4010

      - name: Wait for successful preview deployment
        uses: jakepartusch/wait-for-netlify-action@v1
        id: get-netlify-url
        with:
          site_name: "ambianic-serverless"
          max_timeout: 60

      - name: Run tests against deployed preview
        if: ${{ github.event_name == 'pull_request' }}
        run:  npm run test:postman
        env:
          FUNCTION_URL: http://127.0.0.1:4010

      - name: Run OpenAPI Tests and generate Code Coverage
        run: cd openapi-docs/ && npm install && npm run test

      - name: Create a static API documentation page from openapi specs
        run: npm run generate-docs

        # run this step only if its a push to the main branch
      - name: Publish static API documentation to Github Pages
        if: ${{ github.event_name == 'push' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          personal_token: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}
          publish_dir: ./docs

      - name: Run the semantic-release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Code Coverage Report
        uses: codecov/codecov-action@v1
        with:
          file: ./openapi-docs/coverage/coverage-final.json
          fail_ci_if_error: true

      - name: Checkout generated files
        uses: actions/checkout@v1
