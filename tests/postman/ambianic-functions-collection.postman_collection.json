{
	"info": {
		"_postman_id": "4b8f433d-5891-4ae3-bb49-ca6942a9b08d",
		"name": "ambianic-functions-collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "customers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse = pm.response.json()",
							"",
							"pm.test(\"Returns OK\", () => {",
							"    pm.response.to.have.status(200)",
							"}) ",
							"",
							"pm.test(\"Returns an array containing customers\", () => {",
							"   pm.expect(jsonResponse.customers.data).to.be.an(\"array\");",
							"",
							"   pm.expect(jsonResponse.customers).to.be.an(\"object\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Access-Control-Allow-Origin",
						"value": "*",
						"type": "text"
					},
					{
						"key": "Access-Control-Allow-Headers",
						"value": "Content-Type",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{FUNCTION_ENDPOINT}}/.netlify/functions/customers",
					"host": [
						"{{FUNCTION_ENDPOINT}}"
					],
					"path": [
						".netlify",
						"functions",
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "subscription",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse = pm.response.json()",
							"",
							"pm.test(\"Returns a response object\", () => {",
							"   pm.expect(jsonResponse).to.be.an(\"object\");",
							"})",
							"",
							"pm.test(\"Returns needed fields in response object\", () => {",
							"    pm.expect(jsonResponse.object).to.eql(\"customer\");",
							"",
							"  const expectedInvoice = {",
							"        custom_fields: null,",
							"        default_payment_method: null,",
							"        footer: null",
							"  };",
							"",
							"  pm.expect(jsonResponse.invoice_settings).to.deep.include(expectedInvoice);",
							"}) "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://b92daa4d-8066-40f3-ab25-91e76ea43ab7.mock.pstmn.io/subscriber",
					"protocol": "https",
					"host": [
						"b92daa4d-8066-40f3-ab25-91e76ea43ab7",
						"mock",
						"pstmn",
						"io"
					],
					"path": [
						"subscriber"
					]
				},
				"description": "Create a new stripe user and a subscription"
			},
			"response": []
		},
		{
			"name": "subscriptions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse = pm.response.json()",
							"",
							"pm.test(\"Returns a deleted customer response object\", () => {",
							"   pm.expect(jsonResponse).to.be.an(\"object\");",
							"",
							"   pm.expect(jsonResponse.object).to.eql(\"customer\");",
							"",
							"   pm.expect(jsonResponse.deleted).to.be.a(\"boolean\");",
							"",
							"   pm.expect(jsonResponse.deleted).to.eql(true);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://b92daa4d-8066-40f3-ab25-91e76ea43ab7.mock.pstmn.io/subscription",
					"protocol": "https",
					"host": [
						"b92daa4d-8066-40f3-ab25-91e76ea43ab7",
						"mock",
						"pstmn",
						"io"
					],
					"path": [
						"subscription"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Returns OK\", () => {",
					"    pm.response.to.have.status(200)",
					"}) "
				]
			}
		}
	]
}